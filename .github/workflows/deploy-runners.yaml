name: runners-terraform
on:
  push:
    branches:
      - '*'
    paths:
      - 'github-runners-v2/**'
      - '.github/workflows/deploy-runners.yaml'

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-1
  TF_WORKDIR: github-runners-v2

jobs:
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TF_WORKDIR }}
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::597765856364:role/GitHubActionsDeployRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Show caller identity (debug)
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform init (CI backend)
        run: |
          terraform -version
          terraform init -input=false

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        run: terraform plan -input=false -out tfplan

      - name: Save plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: ${{ env.TF_WORKDIR }}/tfplan
          if-no-files-found: error
          retention-days: 7

  apply:
      needs: plan
      runs-on: ubuntu-latest
      environment: prod
      concurrency:
        group: terraform-apply-github-runners
        cancel-in-progress: false
      defaults:
        run:
          working-directory: ${{ env.TF_WORKDIR }}
      steps:
        - uses: actions/checkout@v4

        - name: Configure AWS credentials via OIDC
          uses: aws-actions/configure-aws-credentials@v4
          with:
            role-to-assume: arn:aws:iam::597765856364:role/GitHubActionsDeployRole
            aws-region: ${{ env.AWS_REGION }}

        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v3

        - name: Terraform init (CI backend)
          run: terraform init -input=false -reconfigure \
                -backend-config=backend-ci.hcl

        - name: Download plan artifact
          uses: actions/download-artifact@v4
          with:
            name: tfplan
            path: ${{ env.TF_WORKDIR }}

        - name: Terraform apply (approved)
          run: terraform apply -input=false -auto-approve tfplan
